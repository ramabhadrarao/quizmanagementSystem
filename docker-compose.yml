version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: quiz-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: quiz-system
    volumes:
      - mongodb_data:/data/db
    networks:
      - quiz-network

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    container_name: quiz-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - quiz-network

  # External Code Execution Service
  code-execution:
    build: 
      context: ../code-execution-service  # Path to your code execution service
      dockerfile: Dockerfile
    container_name: code-execution-service
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      EXECUTION_TIMEOUT: 10000
      MEMORY_LIMIT: 134217728
      CPU_QUOTA: 50000
      RATE_LIMIT_WINDOW: 60000
      RATE_LIMIT_MAX: 100
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./code-execution-logs:/app/logs
    privileged: true  # Required for Docker-in-Docker
    networks:
      - quiz-network

  # Main Quiz Application Server
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: quiz-server
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/quiz-system?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 3001
      CODE_EXECUTION_SERVICE_URL: http://code-execution:3000/api/v1
    depends_on:
      - mongodb
      - redis
      - code-execution
    networks:
      - quiz-network

  # Frontend (for production)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: quiz-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - quiz-network

volumes:
  mongodb_data:
  redis_data:

networks:
  quiz-network:
    driver: bridge